/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package authentication;

import blogtracker.util.UtilFunctions;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;

/**
 *
 * @author skumar34
 */
public class RegisterNewUser extends UtilFunctions {

  
   private String dbConStr;
   private String watchFilesPath;
   private Connection databaseConnection;
   private String dbusername;
   private String dbpassword;
   
   HashMap<String,String> hm = new HashMap<String,String>();
   public RegisterNewUser() {
         loadConstants();
         setResource();

    }
   
   //Fixed duplicate code at the time of migration from MS SQL to MySQL

// public void loadConstants()
//    {
//
//        BufferedReader br = null;
//        try {
//            //System.out.println(System.getProperty("user.dir"));
//            HashMap<String,String> hm = new HashMap<String,String>();
//            br = new BufferedReader(new FileReader("..\\webapps\\ROOT\\WEB-INF\\classes\\authentication\\blogtrackers.config"));
//            String temp = "";
//            while((temp = br.readLine())!=null)
//            {
//                temp = temp.trim();
//                //System.out.println(temp);
//                if(temp.isEmpty()||temp.startsWith("//"))
//                {
//                    continue;
//                }
//                else
//                {
//                    String[] arr = temp.split("##");
//                    //System.out.println(arr[0]+" "+arr[1]);
//                    if(arr.length==2)
//                    {
//                        hm.put(arr[0].trim(), arr[1].trim());
//                    }
//                }
//            }
//            if(hm.isEmpty())
//            {
//                //System.out.println("empty");
//                dbConStr = null;
//            }
//            else
//            {
//               dbConStr = hm.get("dbConnection");
//               dbusername = hm.get("dbUserName");
//               watchFilesPath = hm.get("watchLoc");
//            }
//        } catch (IOException ex) {
//            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
//        }finally {
//            try {
//                br.close();
//            } catch (IOException ex) {
//                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
//            }
//
//        }
//
//    }

 
 private void setResource()
    {
        //"jdbc:sqlserver://149.169.226.79:1433;instanceName=DMMLSERVER;databaseName=blogtrackers_farsi;SelectMethod=cursor;user=trackerapp;password=number123";//"jdbc:sqlserver://localhost;instanceName=MSSQLSERVER;databaseName=blogtracker;SelectMethod=cursor;user=test;password=test";
        if(hm.isEmpty())
        {
            dbConStr = null;
        }
        else
        {
           dbConStr = hm.get("dbConnection");
           dbusername = hm.get("dbUserName");
           dbpassword = hm.get("dbPassword");
           watchFilesPath = hm.get("watchLoc");
        }
        
        try{
            //Class.forName("com.mysql.jdbc.Driver").newInstance();
            databaseConnection = getConn();//DriverManager.getConnection(dbConStr,dbusername,dbpassword);
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }

private boolean initializeUser(String userName)
{

    File ufile = new File(watchFilesPath+userName+".post");        //Offline watch file for new user.
   
    if(!ufile.exists())
    {
       
       try {
           return ufile.createNewFile();
        } catch (IOException ex) {
            //Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }
    return false;

}


 public boolean checkDuplicateUser(String iUserName)
    {
        try{
            if(databaseConnection!=null)
            {
                String queryStr = "SELECT UserName FROM UserCredentials WHERE Username = ?";
                PreparedStatement pstmt = databaseConnection.prepareStatement(queryStr);
                pstmt.setString(1, iUserName);
                ResultSet rSet=pstmt.executeQuery();
               // System.out.println(rSet.getString("UserName"));
                if(rSet.next())
                {
                    //System.out.println("found");
                    rSet.close();
                    pstmt.close();
                    return true;
                }
                else
                {
                    //System.out.println("not found");
                    rSet.close();
                    pstmt.close();
                    return false;        //not a duplicate user
                }
            }
            else
                return true;
        }catch(SQLException e)
        {
            //System.out.println("not found 2");
           return false; //this exception is not a problem  .. this means there was no duplicate user.
        }

    }

  public boolean addUser(String iUserName,String iPassword,String iEmail)
    {
        //System.out.println(iUserName+" "+iPassword+" "+iEmail);
        if(databaseConnection!=null)
        {
            if(checkDuplicateUser(iUserName))
            {
               //System.out.println("duplicate user");
               return false;
            }
            else
            {
                //System.out.println("adding");
                String queryStr = "INSERT INTO UserCredentials VALUES(?,?,?)";
                String queryStr1 = "INSERT INTO User_Watches VALUES(?,?,?,?)";
                try{
                   //databaseConnection = DriverManager.getConnection(dbConStr);
                    PreparedStatement pstmt = databaseConnection.prepareStatement(queryStr);
                    pstmt.setString(1, iUserName);
                    pstmt.setString(2, iPassword);
                    pstmt.setString(3, iEmail);
                    pstmt.execute();
                    pstmt.clearParameters();
                    pstmt = databaseConnection.prepareStatement(queryStr1);
                    pstmt.setString(1, iUserName);
                    pstmt.setString(2, "");
                    pstmt.setString(3, iEmail);
                    pstmt.setInt(4, 1);
                    pstmt.execute();
                    pstmt.close();
                    boolean fcreate = initializeUser(iUserName);
                    return true;
                }catch(SQLException e)
                  {
                     e.printStackTrace();
                     return false;
                  }
             }
        }
        else
            return true;
    }


}
